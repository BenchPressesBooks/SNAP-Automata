######################################################
#  Weather
######################################################
- platform: darksky
  api_key: !secret darksky_apikey
  monitored_conditions:
    - summary
    - temperature
    - hourly_summary
    - temperature_high
    - wind_speed
    - humidity
    - pressure
    - temperature_low
    - precip_intensity
    - icon

######################################################
#  Date and Time
######################################################
- platform: time_date
  display_options:
    - 'date'
    - 'time'

######################################################
#  System Information
######################################################
- platform: command_line
  command: source /srv/homeassistant/bin/activate; python3 -c "import requests; print(requests.get('https://pypi.python.org/pypi/homeassistant/json').json()['info']['version'])"
  name: 'hass_latestversion'
  scan_interval: 3600

- platform: command_line
  command: /srv/homeassistant/bin/hass --version
  name: 'hass_installedversion'
  scan_interval: 3600

- platform: command_line
  name: 'hass_lastreboot'
  command: cat /proc/uptime | awk '{printf "%0.f", $1}'
  scan_interval: 60
  value_template: >-
    {% set uptime = value | int %}
    {% set seconds = uptime % 60 %}
    {% set minutes = ((uptime % 3600) / 60) | int %}
    {% set hours = ((uptime % 86400) / 3600) | int %}
    {% set days = (uptime / 86400) | int %}
    {%- if days > 0 -%}
      {%- if days == 1 -%}
        1 day
      {%- else -%}
        {{ days }} days
      {%- endif -%}
      {{ ', ' }}
    {%- endif -%}
    {{ '%02d' % hours }}:{{ '%02d' % minutes }}

- platform: command_line
  name: 'hass_uptime'
  command: echo "$(($(date +%s) - $(date -d "$(head -n1 /home/homeassistant/.homeassistant/home-assistant.log | cut -d' ' -f-2)" +%s)))"
  scan_interval: 60
  value_template: >-
    {% set uptime = value | int %}
    {% set seconds = uptime % 60 %}
    {% set minutes = ((uptime % 3600) / 60) | int %}
    {% set hours = ((uptime % 86400) / 3600) | int %}
    {% set days = (uptime / 86400) | int %}
    {%- if days > 0 -%}
      {%- if days == 1 -%}
        1 day
      {%- else -%}
        {{ days }} days
      {%- endif -%}
      {{ ', ' }}
    {%- endif -%}
    {{ '%02d' % hours }}:{{ '%02d' % minutes }}

######################################################
#  Templates
######################################################
- platform: template
  sensors:
    dark_sky_summary_template:
      value_template: "{{ states('sensor.dark_sky_summary') }}"
      icon_template: >
        {% if is_state('sensor.dark_sky_icon', 'clear-day') %}
          mdi:weather-sunny
        {% elif is_state('sensor.dark_sky_icon', 'clear-night') %}
          mdi:weather-night
        {% elif is_state('sensor.dark_sky_icon', 'rain') %}
          mdi:weather-rainy
        {% elif is_state('sensor.dark_sky_icon', 'snow') %}
          mdi:weather-snowy
        {% elif is_state('sensor.dark_sky_icon', 'sleet') %}
          mdi:weather-snowy-rainy
        {% elif is_state('sensor.dark_sky_icon', 'wind') %}
          mdi:weather-windy-variant
        {% elif is_state('sensor.dark_sky_icon', 'fog') %}
          mdi:weather-fog
        {% elif is_state('sensor.dark_sky_icon', 'cloudy') %}
          mdi:weather-cloudy
        {% elif is_state('sensor.dark_sky_icon', 'partly-cloudy-day') or is_state('sensor.dark_sky_icon', 'partly-cloudy-night') %}
          mdi:weather-partlycloudy
        {% elif is_state('sensor.dark_sky_icon', 'hail') %}
          mdi:weather-hail
        {% elif is_state('sensor.dark_sky_icon', 'thunderstorm') %}
          mdi:weather-lightning
        {% else %}
          mdi:help-circle
        {% endif %}
      friendly_name: "Current Conditions"

    dark_sky_temperature_template:
      value_template: "{{ states('sensor.dark_sky_temperature') }}"
      icon_template: mdi:thermometer-lines
      friendly_name: "Current Temperature"
      unit_of_measurement: '°F'

    dark_sky_daily_high_low_template:
      value_template: "{{ states('sensor.dark_sky_daytime_high_temperature') }} / {{ states('sensor.dark_sky_overnight_low_temperature') }}"
      icon_template: mdi:contrast
      friendly_name: 'High / Low Temperature'
      unit_of_measurement: "°F"

- platform: template
  sensors:
    fr_main_light_intensity:
      value_template: '{{ states.light.fr_main_lights_17.attributes.brightness | int / 2.55 }}'
      unit_of_measurement: '%'

######################################################
#  Device Monitoring
######################################################
- platform: template
  sensors:
    low_battery:
      value_template: >
        {%- set threshold = 21 -%}
        {%- set domains = ['light', 'switch', 'sensor', 'zwave', 'lock'] -%}
        {%- for domain in domains -%}
        {%- for item in states[domain] if ((item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) or ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
            {{ item.attributes.friendly_name }}{%- if not loop.last %}, {% endif -%}
        {%- endfor -%}
        {%- endfor -%}

    critical_battery:
      value_template: >
        {%- set threshold = 11 -%}
        {%- set domains = ['light', 'switch', 'sensor', 'zwave', 'lock'] -%}
        {%- for domain in domains -%}
        {%- for item in states[domain] if ((item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) or ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
            {{ item.attributes.friendly_name }}{%- if not loop.last %}, {% endif -%}
        {%- endfor -%}
        {%- endfor -%}

    fr_motion_battery:
      value_template: "{{ states.switch.fr_motion_detector_10.attributes.battery_level }}"
      unit_of_measurement: "%"
      icon_template: >
        {%- if 'states.switch.fr_motion_detector_10.attributes.battery_level' > '90' -%}
          mdi:battery
        {%- elif 'states.switch.fr_motion_detector_10.attributes.battery_level' < '10' -%}
          mdi:battery-outline
        {%- else -%}
          mdi:battery-{{(states.switch.fr_motion_detector_10.attributes.battery_level|float / 10)|round*10}}
        {%- endif -%}

    lr_motion_battery:
      value_template: "{{ states.switch.lr_motion_detector_8.attributes.battery_level }}"
      unit_of_measurement: "%"
      icon_template: >
        {%- if 'states.switch.lr_motion_detector_8.attributes.battery_level' > '90' -%}
          mdi:battery
        {%- elif 'states.switch.lr_motion_detector_8.attributes.battery_level' < '10' -%}
          mdi:battery-outline
        {%- else -%}
          mdi:battery-{{(states.switch.lr_motion_detector_8.attributes.battery_level|float / 10)|round*10}}
        {%- endif -%}

    entry_door_battery:
      value_template: "{{ states.switch.entry_door_sensor_5.attributes.battery_level }}"
      unit_of_measurement: "%"
      icon_template: >
        {%- if 'states.switch.entry_door_sensor_5.attributes.battery_level' > '90' -%}
          mdi:battery
        {%- elif 'states.switch.entry_door_sensor_5.attributes.battery_level' < '10' -%}
          mdi:battery-outline
        {%- else -%}
          mdi:battery-{{(states.switch.entry_door_sensor_5.attributes.battery_level|float / 10)|round*10}}
        {%- endif -%}

    back_door_battery:
      value_template: "{{ states.switch.back_door_sensor_18.attributes.battery_level }}"
      unit_of_measurement: "%"
      icon_template: >
        {%- if 'states.switch.back_door_sensor_18.attributes.battery_level' > '90' -%}
          mdi:battery
        {%- elif 'states.switch.back_door_sensor_18.attributes.battery_level' < '10' -%}
          mdi:battery-outline
        {%- else -%}
          mdi:battery-{{(states.switch.back_door_sensor_18.attributes.battery_level|float / 10)|round*10}}
        {%- endif -%}

    basement_leak_sensor_battery:
      value_template: "{{ states.switch.basement_leak_sensor_16.attributes.battery_level }}"
      unit_of_measurement: "%"
      icon_template: >
        {%- if 'states.switch.basement_leak_sensor_16.attributes.battery_level' > '90' -%}
          mdi:battery
        {%- elif 'states.switch.basement_leak_sensor_16.attributes.battery_level' < '10' -%}
          mdi:battery-outline
        {%- else -%}
          mdi:battery-{{(states.switch.basement_leak_sensor_16.attributes.battery_level|float / 10)|round*10}}
        {%- endif -%}
